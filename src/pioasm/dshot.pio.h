// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ----- //
// dshot //
// ----- //

#define dshot_wrap_target 1
#define dshot_wrap 12

#define dshot_DSHOT2400_CLKDIV_INT 1
#define dshot_DSHOT2400_CLKDIV_FRAC 96
#define dshot_DSHOT1200_CLKDIV_INT 2
#define dshot_DSHOT1200_CLKDIV_FRAC 192
#define dshot_DSHOT600_CLKDIV_INT 5
#define dshot_DSHOT600_CLKDIV_FRAC 128
#define dshot_DSHOT300_CLKDIV_INT 11
#define dshot_DSHOT300_CLKDIV_FRAC 0
#define dshot_DSHOT150_CLKDIV_INT 22
#define dshot_DSHOT150_CLKDIV_FRAC 0

static const uint16_t dshot_program_instructions[] = {
    0xe020, //  0: set    x, 0                       
            //     .wrap_target
    0x20a1, //  1: wait   1 pin, 1                   
    0xea01, //  2: set    pins, 1                [10]
    0x8080, //  3: pull   noblock                    
    0xa027, //  4: mov    x, osr                     
    0x6070, //  5: out    null, 16                   
    0xe04e, //  6: set    y, 14                      
    0x6e01, //  7: out    pins, 1                [14]
    0xe900, //  8: set    pins, 0                [9] 
    0xee01, //  9: set    pins, 1                [14]
    0x6e01, // 10: out    pins, 1                [14]
    0xe800, // 11: set    pins, 0                [8] 
    0x0089, // 12: jmp    y--, 9                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dshot_program = {
    .instructions = dshot_program_instructions,
    .length = 13,
    .origin = -1,
};

static inline pio_sm_config dshot_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dshot_wrap_target, offset + dshot_wrap);
    return c;
}
#endif

